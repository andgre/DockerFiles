---
- name: Beginning
  hosts: localhost
  gather_facts: False
  tasks:
    - name: create AWS DEV instance
      ec2:
        instance_type: t2.micro
        image: ami-08962a4068733a2b6
        region: us-east-2
        group: default
        key_name: Mykey19012021-1
        wait: true
        count: 1
        vpc_subnet_id: subnet-9ec182d2
        assign_public_ip: yes
      register: ec2
    - name: Add new instances to host group
      add_host:
        hostname: "{{ item.public_ip }}"
        groupname: dev
        ansible_ssh_private_key_file: 'Mykey19012021-1.pem'
        ansible_ssh_user: "ubuntu"
      loop: "{{ ec2.instances }}"
    - name: Wait for SSH to come up
      wait_for_connection:
        delay: 60
        timeout: 300

    - name: create AWS PROD instance
      ec2:
        instance_type: t2.micro
        image: ami-042e8287309f5df03
        region: us-east-1
        group: default
        key_name: Mykey04032021-1
        wait: true
        count: 1
        vpc_subnet_id:  subnet-702d4a51
        assign_public_ip: yes
      register: ec2
    - name: Add new instances to host group
      add_host:
        hostname: "{{ item.public_ip }}"
        groupname: prod
        ansible_ssh_private_key_file: 'Mykey04032021-1.pem'
        ansible_ssh_user: "ubuntu"
      loop: "{{ ec2.instances }}"
    - name: Wait for SSH to come up
      wait_for_connection:
        delay: 60
        timeout: 300

- name: install Dev enviroment
  hosts: dev
  become: yes
  tasks:
    - name: Ensure Dev-apps are present
      apt:
        pkg:
          - maven
          - git
        update_cache: yes
        state: latest
    - name: git clone java app
      git:
        repo: https://github.com/andgre/boxfuse11.git
        dest: /opt/myapp
    - name: build app
      command: "mvn war:war"
      args:
        chdir: "/opt/myapp/"

- name: install Prod enviroment
  hosts: prod
  become: yes
  tasks:
    - name: Ensure Prod-apps are present
      apt:
        pkg:
          - tomcat9
        update_cache: yes
        state: latest
    - name: Ensure tomcat is started
      service:
        name: tomcat9
        state: started



#- name: Terminate instances
#  hosts: localhost
#  tasks:
#    - name: Terminate instances that were previously launched '{{ ec2.instance_ids }}'
#      ec2:
#        state: 'absent'
#        region: us-east-2
#        instance_ids: '{{ ec2.instance_ids }}'
#      loop: "{{ ec2.instances }}"



